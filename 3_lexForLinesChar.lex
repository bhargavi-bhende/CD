%{
#include <stdio.h>
int charCount = 0, wordCount = 0, lineCount = 0;
FILE *outputFile;
%}

// yywrap function typically returns 1 when the end of the input file is reached, indicating that there is no more input to process. Flex uses this return value to handle situations like switching to a new input file or ending the parsing process.
%option noyywrap // Prevents Flex from adding its default input wrapper code

%%
[a-zA-Z]+   { charCount += yyleng; wordCount++; }
\n          { charCount++; wordCount++; lineCount++; fprintf(outputFile, "%d: %s", lineCount, yytext); }
.           { charCount++; }
%%

int main(int argc, char *argv[]) {
    if (argc != 3) {
        fprintf(stderr, "Usage: %s input_file output_file\n", argv[0]);
        return 1;
    }

    FILE *inputFile = fopen(argv[1], "r");
    if (!inputFile) {
        perror("Error opening input file");
        return 1;
    }

    outputFile = fopen(argv[2], "w");
    if (!outputFile) {
        perror("Error opening output file");
        fclose(inputFile);
        return 1;
    }

    yyin = inputFile; // yyin is a global variable indicating the input stream for Lex
    yylex(); // yylex is the default name for the lexer function generated by Flex

    fprintf(outputFile, "\n\nCharacter Count: %d\n", charCount);
    fprintf(outputFile, "Word Count: %d\n", wordCount);
    fprintf(outputFile, "Line Count: %d\n", lineCount);

    fclose(inputFile);
    fclose(outputFile);
    return 0;
}
